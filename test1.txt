C:\Az_Pro_Tf\vscode_workspace>cd perl-samples

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git branch -M main

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git status
On branch main
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   main.pl

no changes added to commit (use "git add" and/or "git commit -a")

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git -a branch
unknown option: -a
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git branch -a
* main
  remotes/origin/master

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git add main.pl

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git commit -m "update"
[main 02fdecb] update
 1 file changed, 1 insertion(+)

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push -m main
error: unknown switch `m'
usage: git push [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --repo <repository>   repository
    --all                 push all refs
    --mirror              mirror all refs
    -d, --delete          delete refs
    --tags                push tags (can't be used with --all or --mirror)
    -n, --dry-run         dry run
    --porcelain           machine-readable output
    -f, --force           force updates
    --force-with-lease[=<refname>:<expect>]
                          require old value of ref to be at this value
    --recurse-submodules (check|on-demand|no)
                          control recursive pushing of submodules
    --thin                use thin pack
    --receive-pack <receive-pack>
                          receive pack program
    --exec <receive-pack>
                          receive pack program
    -u, --set-upstream    set upstream for git pull/status
    --progress            force progress reporting
    --prune               prune locally removed refs
    --no-verify           bypass pre-push hook
    --follow-tags         push missing but relevant tags
    --signed[=(yes|no|if-asked)]
                          GPG sign the push
    --atomic              request atomic transaction on remote side
    -o, --push-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only


C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push
fatal: The upstream branch of your current branch does not match
the name of your current branch.  To push to the upstream branch
on the remote, use

    git push origin HEAD:master

To push to the branch of the same name on the remote, use

    git push origin HEAD

To choose either option permanently, see push.default in 'git help config'.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push -u origin main
To https://github.com/manireddy07/perl-samples.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/manireddy07/perl-samples.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git pull
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 1 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 596 bytes | 74.00 KiB/s, done.
From https://github.com/manireddy07/perl-samples
 * [new branch]      main       -> origin/main
Already up to date.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push -u origin main
To https://github.com/manireddy07/perl-samples.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/manireddy07/perl-samples.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git pull --rebase origin main
From https://github.com/manireddy07/perl-samples
 * branch            main       -> FETCH_HEAD
Successfully rebased and updated refs/heads/main.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git pull --rebase origin master
From https://github.com/manireddy07/perl-samples
 * branch            master     -> FETCH_HEAD
dropping 7625a6aef432986d0ec3795dd30f2d6a851ccf33 Initial commit -- patch contents already upstream
dropping 3863be7bc109dd46f842404f02095f89c9d24acb initial commit -- patch contents already upstream
Successfully rebased and updated refs/heads/main.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git status
On branch main
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git branch -a
* main
  remotes/origin/main
  remotes/origin/master

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push
fatal: The upstream branch of your current branch does not match
the name of your current branch.  To push to the upstream branch
on the remote, use

    git push origin HEAD:master

To push to the branch of the same name on the remote, use

    git push origin HEAD

To choose either option permanently, see push.default in 'git help config'.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push orgon HEAD
fatal: 'orgon' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git push origin HEAD
To https://github.com/manireddy07/perl-samples.git
 ! [rejected]        HEAD -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/manireddy07/perl-samples.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git merge
Already up to date.

C:\Az_Pro_Tf\vscode_workspace\perl-samples>git merge -help
usage: git merge [<options>] [<commit>...]
   or: git merge --abort
   or: git merge --continue

    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --summary             (synonym to --stat)
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    -e, --edit            edit message before committing
    --cleanup <mode>      how to strip spaces and #comments from message
    --ff                  allow fast-forward (default)
    --ff-only             abort if fast-forward is not possible
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --verify-signatures   verify that the named commit has a valid GPG signature
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -m, --message <message>
                          merge commit message (for a non-fast-forward merge)
    -F, --file <path>     read message from file
    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --abort               abort the current in-progress merge
    --quit                --abort but leave index and working tree alone
    --continue            continue the current in-progress merge
    --allow-unrelated-histories
                          allow merging unrelated histories
    --progress            force progress reporting
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --autostash           automatically stash/stash pop before and after
    --overwrite-ignore    update ignored files (default)
    --signoff             add Signed-off-by:
    --no-verify           bypass pre-merge-commit and commit-msg hooks


C:\Az_Pro_Tf\vscode_workspace\perl-samples>git merge